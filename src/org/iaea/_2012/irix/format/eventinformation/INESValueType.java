//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.14 at 09:56:57 AM CET 
//


package org.iaea._2012.irix.format.eventinformation;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for INESValueType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="INESValueType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="INES-0"/>
 *     &lt;enumeration value="INES-1"/>
 *     &lt;enumeration value="INES-2"/>
 *     &lt;enumeration value="INES-3"/>
 *     &lt;enumeration value="INES-4"/>
 *     &lt;enumeration value="INES-5"/>
 *     &lt;enumeration value="INES-6"/>
 *     &lt;enumeration value="INES-7"/>
 *     &lt;enumeration value="Not Applicable"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "INESValueType")
@XmlEnum
public enum INESValueType {

    @XmlEnumValue("INES-0")
    INES_0("INES-0"),
    @XmlEnumValue("INES-1")
    INES_1("INES-1"),
    @XmlEnumValue("INES-2")
    INES_2("INES-2"),
    @XmlEnumValue("INES-3")
    INES_3("INES-3"),
    @XmlEnumValue("INES-4")
    INES_4("INES-4"),
    @XmlEnumValue("INES-5")
    INES_5("INES-5"),
    @XmlEnumValue("INES-6")
    INES_6("INES-6"),
    @XmlEnumValue("INES-7")
    INES_7("INES-7"),
    @XmlEnumValue("Not Applicable")
    NOT_APPLICABLE("Not Applicable");
    private final String value;

    INESValueType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static INESValueType fromValue(String v) {
        for (INESValueType c: INESValueType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
