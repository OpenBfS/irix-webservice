//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.14 at 09:56:57 AM CET 
//


package org.iaea._2012.irix.format.eventinformation;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TypeOfEventType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TypeOfEventType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="Nuclear Installation Event"/>
 *     &lt;enumeration value="Missing Dangerous Source"/>
 *     &lt;enumeration value="Discovered Dangerous Source"/>
 *     &lt;enumeration value="Space Object Re-entry"/>
 *     &lt;enumeration value="Elevated Ambient Radiation Levels"/>
 *     &lt;enumeration value="Contamination in Food / Drinking Water"/>
 *     &lt;enumeration value="Contamination in Commodities"/>
 *     &lt;enumeration value="Severe Overexposure"/>
 *     &lt;enumeration value="Transport Event"/>
 *     &lt;enumeration value="Credible Threat"/>
 *     &lt;enumeration value="Malicious Act"/>
 *     &lt;enumeration value="Other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "TypeOfEventType")
@XmlEnum
public enum TypeOfEventType {

    @XmlEnumValue("Nuclear Installation Event")
    NUCLEAR_INSTALLATION_EVENT("Nuclear Installation Event"),
    @XmlEnumValue("Missing Dangerous Source")
    MISSING_DANGEROUS_SOURCE("Missing Dangerous Source"),
    @XmlEnumValue("Discovered Dangerous Source")
    DISCOVERED_DANGEROUS_SOURCE("Discovered Dangerous Source"),
    @XmlEnumValue("Space Object Re-entry")
    SPACE_OBJECT_RE_ENTRY("Space Object Re-entry"),
    @XmlEnumValue("Elevated Ambient Radiation Levels")
    ELEVATED_AMBIENT_RADIATION_LEVELS("Elevated Ambient Radiation Levels"),
    @XmlEnumValue("Contamination in Food / Drinking Water")
    CONTAMINATION_IN_FOOD_DRINKING_WATER("Contamination in Food / Drinking Water"),
    @XmlEnumValue("Contamination in Commodities")
    CONTAMINATION_IN_COMMODITIES("Contamination in Commodities"),
    @XmlEnumValue("Severe Overexposure")
    SEVERE_OVEREXPOSURE("Severe Overexposure"),
    @XmlEnumValue("Transport Event")
    TRANSPORT_EVENT("Transport Event"),
    @XmlEnumValue("Credible Threat")
    CREDIBLE_THREAT("Credible Threat"),
    @XmlEnumValue("Malicious Act")
    MALICIOUS_ACT("Malicious Act"),
    @XmlEnumValue("Other")
    OTHER("Other");
    private final String value;

    TypeOfEventType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeOfEventType fromValue(String v) {
        for (TypeOfEventType c: TypeOfEventType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
