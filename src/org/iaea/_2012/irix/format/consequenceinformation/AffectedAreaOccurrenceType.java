//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.14 at 09:56:57 AM CET 
//


package org.iaea._2012.irix.format.consequenceinformation;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AffectedAreaOccurrenceType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AffectedAreaOccurrenceType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="Actual"/>
 *     &lt;enumeration value="Actual - Confirmed"/>
 *     &lt;enumeration value="Actual - Not Confirmed"/>
 *     &lt;enumeration value="Projected"/>
 *     &lt;enumeration value="Projected - Unlikely to Occur"/>
 *     &lt;enumeration value="Projected - Likely to Occur"/>
 *     &lt;enumeration value="Projected - Certain to Occur"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "AffectedAreaOccurrenceType")
@XmlEnum
public enum AffectedAreaOccurrenceType {

    @XmlEnumValue("Actual")
    ACTUAL("Actual"),
    @XmlEnumValue("Actual - Confirmed")
    ACTUAL_CONFIRMED("Actual - Confirmed"),
    @XmlEnumValue("Actual - Not Confirmed")
    ACTUAL_NOT_CONFIRMED("Actual - Not Confirmed"),
    @XmlEnumValue("Projected")
    PROJECTED("Projected"),
    @XmlEnumValue("Projected - Unlikely to Occur")
    PROJECTED_UNLIKELY_TO_OCCUR("Projected - Unlikely to Occur"),
    @XmlEnumValue("Projected - Likely to Occur")
    PROJECTED_LIKELY_TO_OCCUR("Projected - Likely to Occur"),
    @XmlEnumValue("Projected - Certain to Occur")
    PROJECTED_CERTAIN_TO_OCCUR("Projected - Certain to Occur");
    private final String value;

    AffectedAreaOccurrenceType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AffectedAreaOccurrenceType fromValue(String v) {
        for (AffectedAreaOccurrenceType c: AffectedAreaOccurrenceType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
