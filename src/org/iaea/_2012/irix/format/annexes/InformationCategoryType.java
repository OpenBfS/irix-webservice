//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.19 at 02:22:10 PM CET 
//


package org.iaea._2012.irix.format.annexes;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for InformationCategoryType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="InformationCategoryType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="Event Information"/>
 *     &lt;enumeration value="Installation Status Information"/>
 *     &lt;enumeration value="Release Information"/>
 *     &lt;enumeration value="Meteorological Information"/>
 *     &lt;enumeration value="Measurement Data"/>
 *     &lt;enumeration value="Protective Actions Information"/>
 *     &lt;enumeration value="Response Information"/>
 *     &lt;enumeration value="Public Information"/>
 *     &lt;enumeration value="Public Information - Press Release"/>
 *     &lt;enumeration value="Modelling Results"/>
 *     &lt;enumeration value="Modelling Results - Averted Dose"/>
 *     &lt;enumeration value="Modelling Results - Cloud Arrival Time"/>
 *     &lt;enumeration value="Modelling Results - Contamination"/>
 *     &lt;enumeration value="Modelling Results - Dispersion"/>
 *     &lt;enumeration value="Modelling Results - Dose Rate"/>
 *     &lt;enumeration value="Modelling Results - Projected Dose"/>
 *     &lt;enumeration value="Modelling Results - Plume Trajectory"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "InformationCategoryType")
@XmlEnum
public enum InformationCategoryType {

    @XmlEnumValue("Event Information")
    EVENT_INFORMATION("Event Information"),
    @XmlEnumValue("Installation Status Information")
    INSTALLATION_STATUS_INFORMATION("Installation Status Information"),
    @XmlEnumValue("Release Information")
    RELEASE_INFORMATION("Release Information"),
    @XmlEnumValue("Meteorological Information")
    METEOROLOGICAL_INFORMATION("Meteorological Information"),
    @XmlEnumValue("Measurement Data")
    MEASUREMENT_DATA("Measurement Data"),
    @XmlEnumValue("Protective Actions Information")
    PROTECTIVE_ACTIONS_INFORMATION("Protective Actions Information"),
    @XmlEnumValue("Response Information")
    RESPONSE_INFORMATION("Response Information"),
    @XmlEnumValue("Public Information")
    PUBLIC_INFORMATION("Public Information"),
    @XmlEnumValue("Public Information - Press Release")
    PUBLIC_INFORMATION_PRESS_RELEASE("Public Information - Press Release"),
    @XmlEnumValue("Modelling Results")
    MODELLING_RESULTS("Modelling Results"),
    @XmlEnumValue("Modelling Results - Averted Dose")
    MODELLING_RESULTS_AVERTED_DOSE("Modelling Results - Averted Dose"),
    @XmlEnumValue("Modelling Results - Cloud Arrival Time")
    MODELLING_RESULTS_CLOUD_ARRIVAL_TIME("Modelling Results - Cloud Arrival Time"),
    @XmlEnumValue("Modelling Results - Contamination")
    MODELLING_RESULTS_CONTAMINATION("Modelling Results - Contamination"),
    @XmlEnumValue("Modelling Results - Dispersion")
    MODELLING_RESULTS_DISPERSION("Modelling Results - Dispersion"),
    @XmlEnumValue("Modelling Results - Dose Rate")
    MODELLING_RESULTS_DOSE_RATE("Modelling Results - Dose Rate"),
    @XmlEnumValue("Modelling Results - Projected Dose")
    MODELLING_RESULTS_PROJECTED_DOSE("Modelling Results - Projected Dose"),
    @XmlEnumValue("Modelling Results - Plume Trajectory")
    MODELLING_RESULTS_PLUME_TRAJECTORY("Modelling Results - Plume Trajectory");
    private final String value;

    InformationCategoryType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static InformationCategoryType fromValue(String v) {
        for (InformationCategoryType c: InformationCategoryType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
