//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.19 at 02:22:10 PM CET 
//


package org.iaea._2012.irix.format.annexes;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.iaea._2012.irix.format.annexes package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Annexes_QNAME = new QName("http://www.iaea.org/2012/IRIX/Format/Annexes", "Annexes");
    private final static QName _FileEnclosureTypeInformationCategoryDescription_QNAME = new QName("http://www.iaea.org/2012/IRIX/Format/Annexes", "InformationCategoryDescription");
    private final static QName _FileEnclosureTypeInformationCategory_QNAME = new QName("http://www.iaea.org/2012/IRIX/Format/Annexes", "InformationCategory");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.iaea._2012.irix.format.annexes
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link AnnexesType }
     * 
     */
    public AnnexesType createAnnexesType() {
        return new AnnexesType();
    }

    /**
     * Create an instance of {@link AnnotationType }
     * 
     */
    public AnnotationType createAnnotationType() {
        return new AnnotationType();
    }

    /**
     * Create an instance of {@link FileHashType }
     * 
     */
    public FileHashType createFileHashType() {
        return new FileHashType();
    }

    /**
     * Create an instance of {@link FileEnclosureType }
     * 
     */
    public FileEnclosureType createFileEnclosureType() {
        return new FileEnclosureType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AnnexesType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.iaea.org/2012/IRIX/Format/Annexes", name = "Annexes")
    public JAXBElement<AnnexesType> createAnnexes(AnnexesType value) {
        return new JAXBElement<AnnexesType>(_Annexes_QNAME, AnnexesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.iaea.org/2012/IRIX/Format/Annexes", name = "InformationCategoryDescription", scope = FileEnclosureType.class)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createFileEnclosureTypeInformationCategoryDescription(String value) {
        return new JAXBElement<String>(_FileEnclosureTypeInformationCategoryDescription_QNAME, String.class, FileEnclosureType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InformationCategoryType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.iaea.org/2012/IRIX/Format/Annexes", name = "InformationCategory", scope = FileEnclosureType.class)
    public JAXBElement<InformationCategoryType> createFileEnclosureTypeInformationCategory(InformationCategoryType value) {
        return new JAXBElement<InformationCategoryType>(_FileEnclosureTypeInformationCategory_QNAME, InformationCategoryType.class, FileEnclosureType.class, value);
    }

}
